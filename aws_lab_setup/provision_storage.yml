---
- name: Generate users list
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: generate users list
      set_fact:
        users: "{{ users|default([]) + [ {'name': 'student' + item, 'username': 'student' + item, 'email': 'student' + item + '@example.com'} ] }}"
      with_sequence: start="{{ student_count_start }}" end="{{ student_count_end }}"



#- name: Create lab instances in AWS
#  hosts: localhost
#  connection: local
#  become: no
#  gather_facts: no
#  roles:
#    - manage_ec2_instances
- name: Provision Storage Resources
  hosts: localhost
  become: no
  gather_facts: no
  roles:
    - storage


- name: Create lab instances in AWS
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  roles:
    - manage_ec2_instances


- name: create Route53 domain names for control nodes
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  roles:
    - domain-names

- name: Configure common options on managed nodes and control nodes
  hosts: "managed_nodes:control_nodes"
  become: yes
  roles:
    - user_accounts
    - common

- name: Configure control node
  hosts: control_nodes
  become: yes
  roles:
    - control_node

- name: Install Ansible tower
  hosts: control_nodes
  become: yes
  gather_facts: no
  roles:
    #- ansible-tower
    - { role: ansible-tower, when: tower_install }
    - { role: populate_tower, when: tower_install }

#- name: Populate tower
#  hosts: control_nodes
#  become: yes
#  gather_facts: no
#  tags: populate
#
#  roles:
#    - populate_tower

#- name: Enable http on the cluster
#  hosts: control_nodes
#  become: no
#  gather_facts: no
#  tasks:
#    vars:
#      student_num:
#
#    - na_ontap_command:
#        hostname: "{{ all_workspace_ips[{{student_num}}] }}"
#        username: "{{ netapp_username }}"
#        password: "{{ netapp_password }}"
#        https: true
#        validate_certs: false
#        privilege: advanced
#        command: 'system services web modify -http-enabled true'
#      #with_sequence: start="{{ student_count_start }}" end="{{ student_count_end }}"
#      #with_items: "{{ all_workspace_ips }}"
#      ignore_errors: yes
      #delegate_to: "{{ aws_tower }}"
      #register: result
      #until: result.rc == 0
      #retries: 10
      #delay: 120
