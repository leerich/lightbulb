---
- hosts: localhost
  connection: local
  gather_facts: False
  become: false

  tasks:
    - name: Remove Instance for Webserver and Guacamole
      ec2:
        assign_public_ip: yes
        key_name: "{{ ec2_key_name }}"
        group: "{{ ec2_security_group }}"
        instance_type: "t2.medium"
        image: "ami-877b9e91"
        region: "{{ ec2_region }}"
        #zone: "{{ ec2_zone }}"
        exact_count: 0
        count_tag:
          Name: "{{ ec2_name_prefix }}-workshop-webserver"
        instance_tags:
          Name: "{{ ec2_name_prefix }}-workshop-webserver"
        wait: true
        vpc_subnet_id: "{{ ec2_vpc_subnet_id | default(omit) }}"
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: 20
            delete_on_termination: true

    - name: Provision Instance for Webserver and Guacamole
      ec2:
        assign_public_ip: yes
        key_name: "{{ ec2_key_name }}"
        group: "{{ ec2_security_group }}"
        instance_type: "t2.medium"
        image: "ami-877b9e91"
        region: "{{ ec2_region }}"
        #zone: "{{ ec2_zone }}"
        exact_count: "{{ ec2_exact_count }}"
        count_tag:
          Name: "{{ ec2_name_prefix }}-workshop-webserver"
        instance_tags:
          Name: "{{ ec2_name_prefix }}-workshop-webserver"
        wait: true
        vpc_subnet_id: "{{ ec2_vpc_subnet_id | default(omit) }}"
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: 20
            delete_on_termination: true
      register: ec2


    - name: Wait for SS
      delegate_to: "{{ item.public_ip }}"
      wait_for_connection:
        delay: 30
        timeout: 320
      loop: "{{ ec2.instances }}"

    - name: Get Public IP
      set_fact:
        host_addr: "{{ item.tagged_instances[0].public_ip }}"
      with_items:  "{{ instances.results }}"

    - name: Create DNS name for each web server
      route53:
        state: "{{ route53_state }}"
        zone: "{{workshop_dns_zone}}"
        #region: "{{ec2_region}}"
        record: "lightbulb.{{workshop_dns_zone}}"
        type: CNAME
        overwrite: yes
        value: "{{ host_addr }}"
        type: A
      #with_items: "{{ instances.results }}"
      #when: "'control' in item.invocation.module_args.instance_tags.Name"
#  roles:
#  - web_instance
#  tags:
#    - skip

- hosts: "{{ host_addr }}"
  roles:
  - web_server
