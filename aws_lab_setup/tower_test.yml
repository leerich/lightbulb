---
- name:  find buggy hosts
  hosts: all
  gather_facts: true
  vars:
    email_subject: Buggy Hosts on Precheck
  tasks:
  - command:     "df -i /"
    async:       4
    poll:        4
    retries:     1
    ignore_errors: True
    register:    df_test


  - name: run on tower node
    block:
      - add_host:
          name:    "{{ item }}"
          group:   buggy
        with_items:  "{{ groups['all'] }}"
        when:      hostvars[item]['df_test']['changed'] is defined and hostvars[item]['df_test']['changed'] == false

      - add_host:
          name:    "{{ item }}"
          group:   available
          with_items:  "{{ groups['all'] }}"
        when:      hostvars[item]['df_test']['changed'] is defined and hostvars[item]['df_test']['changed'] == true

      - template:
          src:     email.j2
          dest:    /tmp/buggy_hosts.txt
        when:      groups.buggy is defined

  #  - mail:
  #      from:      "{{ email_username }}"
  #    to:        "{{ email_to }}"
  #    cc:        "{{ email_cc }}"
  #    subject:   "{{ email_subject }}"
  #    attach:    /tmp/buggy_hosts.txt
  #    body: |
  #      This email was generated by Ansible.
  #      The attached list will display the buggy hosts.
  #      If a host cannot complete this command in 4 seconds, df -i, then it is considered buggy.
  #      An Ansible admin will be able to use this list of hosts as an inventory source.
  #  when: groups.buggy is defined
  #- file:
  #      path: /tmp/buggy_hosts.txt
  #    state: absent
  #  when: groups.buggy is defined
  #delegate_to: localhost
  #run_once:  true

  - meta: clear_host_errors

#- name: To precheck hosts for patching
#  hosts: available
#  ---


- name: To precheck hosts for patching
  hosts: available
  strategy: linear
  gather_facts: no
  vars_files:
    - vars.yml
  tasks:
    - ignore_errors: True
    block:
    - name: collect facts with setup
      setup:
        gather_timeout: 30
    - debug:
        msg: "Metadata Version Number is  {{metadataVersion}}"



    #########################  SERVER KERNEL VERSION  #########################
    - debug:
        msg: "[INFO] The kernel version for {{inventory_hostname}} is {{ansible_kernel}}"
    #########################  END SERVER KERNEL VERSION  #########################

    #########################  RUNLEVEL CHECK #########################
    - name: get runlevel
      shell: who -r
      register: runlevel
      become: yes
