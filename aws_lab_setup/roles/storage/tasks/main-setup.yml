---
- name: set end end_count
  set_fact:
    end_count: "{{ student_count_end|int - 1 }}"

- name: set fact
  set_fact:
    workspace_ips: []

#- name: Create AWS Account Template
#  template:
#    src: account.j2
#    dest: ./aws-account.txt

- name: Login to OnTap Instance
  uri:
    url:  http://{{ cloud_mgr }}:80/occm/api/auth/login
    method: POST
    body_format: json
    body: { "email": "{{ email_addr }}", "password": "{{ cloud_mgr_password }}" }
    status_code: 204
  register: login

- name: Get Cluster Properties
  uri:
    url: https://{{ cloud_mgr }}:443/occm/api/vsa/working-environments?fields=clusterProperties
    method: Get
    validate_certs: no
    return_content: yes
    status_code: 200
    headers:
      Cookie: "{{ login.set_cookie }}"
  register: cluster_Properties

- name: debug clusterProperties
  debug: var=cluster_Properties

#- name: parse clusterProperties
#  set_fact:
#    clusterIP: "{{ cluster_Properties.json[0]['clusterProperties']['lifs'][0]['ip'] }}"
#
- name: set workspace variable
  set_fact:
    workspace_ips: ['null']
    data_ips: ['null']

- name: Set Workspace IP Address (This will fail until volume is initialized. May take up to 25 mins)
  set_fact:
    workspace_{{item}}_ip: "{{ cluster_Properties.json[item|int]['clusterProperties']['systemManagerUrl'] | urlsplit('hostname') }}"
    workspace_ips: "{{workspace_ips}} + [ '{{ cluster_Properties.json[item|int]['clusterProperties']['systemManagerUrl'] | urlsplit('hostname') }}']"
    data_ips: "{{ data_ips }} + [ '{{ cluster_Properties.json[item|int]['clusterProperties']['lifs'][4]['ip'] }}' ]"
  with_sequence: start=0 end="{{ end_count }}"

- debug: var=workspace_ips

- debug: var=data_ips

- name: set stat all_workspace_ips
  set_fact:
    all_workspace_ips: "{{ workspace_ips }}"
    cacheable: yes

#- debug: var="{{ item }}"
#  with_items: "{{all_workspace_ips}}"
#  failed_when: all_workspace_ips is undefined

- name: Generate Ontap Student Inventories
  template:
    src: instances.txt.j2
    dest: ./student_instances/student{{item}}-ontapinstances.txt
  with_sequence: start=1 end="{{ student_count_end }}"
  #with_items: "{{ users }}"

#- pause:
#- name: Enable http on the cluster
#  na_ontap_command:
#    #hostname: "{{ all_workspace_ips[item|int] }}"
#    #hostname: "{{ cluster_Properties.json[item|int]['clusterProperties']['systemManagerUrl'] | urlsplit('hostname') }}"
#    hostname: "{{ workspace_ips[item|int] }}"
#    username: "{{ netapp_username }}"
#    password: "{{ netapp_password }}"
#    #https: true
#    #validate_certs: false
#    privilege: advanced
#    command: 'system services web modify -http-enabled true'
#  loop: "{{ range( 0 , 3) | list }}"
#  #with_sequence: start=1 end="{{ student_count_end }}"
#  #with_items: "{{ all_workspace_ips }}"
#  ignore_errors: no
#  delegate_to: "{{ aws_tower }}"
  #register: result
#- name: Enable http on the cluster
#  na_ontap_command:
#    hostname: "{{ item }}"
#    username: "{{ netapp_username }}"
#    password: "{{ netapp_password }}"
#    https: true
#    validate_certs: false
#    privilege: advanced
#    command: 'system services web modify -http-enabled true'
#  #with_sequence: start=0 count="{{ student_count_end }}"
#  with_items: "{{ all_workspace_ips }}"
#  ignore_errors: no
#  delegate_to: "{{ aws_tower }}"
