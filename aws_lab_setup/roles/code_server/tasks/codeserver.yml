---
#- name: install cerbot
#  yum:
#    name: certbot

# directions found here https://certbot.eff.org/lets-encrypt/centosrhel8-other
- name: Download and install certbot
  get_url:
    url: https://dl.eff.org/certbot-auto
    dest: /usr/local/bin/certbot-auto
    mode: '0755'
    owner: "root"

- name: turn off tower
  shell: ansible-tower-service stop

- name: dns for coder
  become: false
  route53:
    state: "{{ s3_state }}"
    zone: "{{workshop_dns_zone}}"
    record: "{{ec2_name_prefix|lower}}-{{ username }}.{{workshop_dns_zone}}"
    type: A
    overwrite: true
    value: "{{ansible_host}}"
  delegate_to: localhost
  register: route53_status

#- name: grab latest release of Coder binary
#  uri:
#    url: https://github.com/cdr/code-server/releases/download/2.1698/code-server2.1698-vsc1.41.1-linux-x86_64.tar.gz
#  register: github_result
#
#- name: save url for extraction of Coder binary
#  set_fact:
#    download_url: "{{item.browser_download_url}}"
#    version_name: "{{item.name.split('.tar')[0]}}"
#  when: "'linux' in item.browser_download_url"
#  loop: "{{github_result.json.assets}}"
#  loop_control:
#    label: "{{ item.browser_download_url }}"
#
#- name: Extract file
#  unarchive:
#    src: "{{download_url}}"
#    dest: "/home/{{username}}"
#    remote_src: true
#  register: output

#- name: move binary to /opt
#  copy:
#    src: /home/{{username}}/{{ version_name }}/code-server
#    dest: /opt/code-server
#    remote_src: true
#    mode: '0744'
#    owner: "{{username}}"
#    group: "{{username}}"
- name: Extract file
  unarchive:
    src: '{{ codeserver_url | default("https://github.com/cdr/code-server/releases/download/2.1698/code-server2.1698-vsc1.41.1-linux-x86_64.tar.gz") }}'
    dest: "/home/{{ username }}"
    remote_src: true
    list_files: true
  register: unarchive_out

# this usage of unarchive_out will get us into trouble if archive contains more then one top level directory. But it doesn't ;)
- name: move binary to /opt
  copy:
    src: /home/{{username}}/{{ unarchive_out.files[0] }}/code-server
    dest: /opt/code-server
    remote_src: true
    mode: '0744'
    owner: "{{username}}"
    group: "{{username}}"



- name: update nginx configuration to support code server
  blockinfile:
    block: "{{ lookup('template', 'nginx.conf') }}"
    dest: /etc/nginx/nginx.conf
    insertafter: "http {"

- name: Apply systemd service file
  template:
    src: code-server.service.j2
    dest: /etc/systemd/system/code-server.service
    owner: "{{username}}"
    group: wheel
    mode: '0744'

# source: https://vscode.readthedocs.io/en/latest/getstarted/settings/
- name: ensure custom facts directory exists
  file:
    path: "/home/{{username}}/.local/share/code-server/User/"
    recurse: true
    state: directory
    owner: "{{username}}"

- name: apply code server defaults
  template:
    src: settings.json
    dest: "/home/{{username}}/.local/share/code-server/User/settings.json"
    owner: "{{username}}"

- name: copy extension files to host
  copy:
    src: files/{{ item }}
    dest: /home/{{ username }}/.local/share/code-server/extensions/
    owner: "{{ username }}"
    group: "{{ username }}"
  loop:
    - bierner.markdown-preview-github-styles-0.1.6.vsix
    - hnw.vscode-auto-open-markdown-preview-0.0.4.vsix
    - vscoss.vscode-ansible-0.5.2.vsix

- name: install ansible and markdown extensions
  become_user: "{{ username }}"
  command: "/opt/code-server --install-extension /home/{{ username }}/.local/share/code-server/extensions/{{ item }}"
  loop:
    - bierner.markdown-preview-github-styles-0.1.6.vsix
    - hnw.vscode-auto-open-markdown-preview-0.0.4.vsix
    - vscoss.vscode-ansible-0.5.2.vsix
  ignore_errors: true

- name: start code-server service
  service:
    name: code-server
    state: started
    enabled: true

- name: issue cert
  shell: /usr/local/bin/certbot-auto certonly --no-bootstrap --standalone -d {{ec2_name_prefix|lower}}-{{ username }}.{{workshop_dns_zone}} --email ansible-network@redhat.com --noninteractive --agree-tos
  register: issue_cert
  until: issue_cert is not failed
  retries: 5
  ignore_errors: true

#- name: issue cert
#  shell: certbot certonly --standalone -d {{ec2_name_prefix|lower}}-{{ username }}.{{workshop_dns_zone}} --email ansible-network@redhat.com --noninteractive --agree-tos
#  register: issue_cert
#  until: issue_cert is not failed
#  retries: 5
#  ignore_errors: true
#
- name: MOVE SSL KEY
  copy:
    remote_src: True
    src: "/etc/letsencrypt/live/{{ec2_name_prefix|lower}}-{{username}}.rhdemo.io/privkey.pem"
    dest: /opt/server.key
  #when: issue_cert is not failed

- name: MOVE SSL Chain
  copy:
    remote_src: True
    src: "/etc/letsencrypt/live/{{ec2_name_prefix|lower}}-{{username}}.rhdemo.io/fullchain.pem"
    dest: /opt/server.crt
  #when: issue_cert is not failed

- name: turn on tower
  shell: ansible-tower-service start
  register: install_tower
  until: install_tower is not failed
  retries: 5

- name: cleanup Coder binary from student directory
  file:
    path: /home/{{username}}/{{ unarchive_out.files[0] }}
    state: absent
