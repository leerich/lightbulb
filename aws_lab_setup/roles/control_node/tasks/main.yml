- name: Install EPEL
  yum:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
  register: install_epel
  until: install_epel is success
  delay: 3
  retries: 5
  tags:
    - control_node
    - control

- name: Remove repo file
  file:
    path: /etc/yum.repos.d/CentOS-Base.repo
    state: absent

#- name: Install Base Repo
#  yum_repository:
#    name: "rhui-REGION-rhel-server-extras"
#    description: "Red Hat Enterprise Linux Server 7 Extra(RPMs)"
#    file: redhat-rhui
#    mirrorlist: https://rhui2-cds01.REGION.aws.ce.redhat.com/pulp/mirror/content/dist/rhel/rhui/server/7/$releasever/$basearch/extras/os
#    enabled: yes
#    gpgcheck: no
#    sslverify: yes
#    sslclientkey: /etc/pki/rhui/content-rhel7.key
#    sslclientcert: /etc/pki/rhui/product/content-rhel7.crt
#    sslcacert: /etc/pki/rhui/cdn.redhat.com-chain.crt
#  tags:
#    - control_node
#    - control
#
#- name: Install rhui Repo
#  yum_repository:
#    name: "rhui-REGION-rhel-server-rhscl"
#    description: "Red Hat Enterprise Linux Server 7 RHUI(RPMs)"
#    file: redhat-rhui
#    mirrorlist: https://rhui3.REGION.aws.ce.redhat.com/pulp/mirror/content/dist/rhel/rhui/server/7/$releasever/$basearch/rhscl/1/os
#    enabled: yes
#    gpgcheck: no
#    sslverify: yes
#    sslcacert: /etc/pki/rhui/cdn.redhat.com-chain.crt
#    sslclientcert: /etc/pki/rhui/product/content-rhel7.crt
#    sslclientkey: /etc/pki/rhui/content-rhel7.key
#  tags:
#    - control_node
#    - control

- name: Install base packages
  yum:
    name:
      - vim
      - git
    state: latest
    #enablerepo: rhel-7-server-rhui-extras-rpms
    #enablerepo: rhui-REGION-rhel-server-extras
  register: install_base_packages
  until: install_base_packages|success
  delay: 3
  retries: 5
  tags:
    - control_node
    - control

- name: Install Ansible
  yum:
    name:
      - sshpass
      - ansible
      - python2-pip
      #- ansible-2.4.2.0-2.el7
    state: latest
    allow_downgrade: yes
    #enablerepo: rhel-7-server-rhui-extras-rpms
    #enablerepo: rhui-REGION-rhel-server-extras
  register: install_ansible
  until: install_ansible|success
  delay: 3
  retries: 5
  tags:
    - control_node
    - control
  when: control_node_install_ansible


- name: Clone lightbulb
  git:
    accept_hostkey: yes
    clone: yes
    dest: ~{{ username }}/lightbulb
    repo: https://github.com/ansible/lightbulb.git
    force: yes
  register: clone_lightbulb
  until: clone_lightbulb|success
  delay: 3
  retries: 5
  become_user: "{{ username }}"
  tags:
    - control_node
    - control

- name: Remove things that students don't need
  file:
    state: absent
    path: ~{{ username }}/lightbulb/{{ item }}
  with_items:
    - aws_lab_setup
    - resources
    - Vagrantfile
    - README.md
  tags:
    - control_node
    - control

- name: Install ansible.cfg and vimrc in home directory
  template:
    src: "{{ item }}"
    dest: ~{{ username }}/.{{ (item | splitext)[0] }}
    owner: "{{ username }}"
    group: "{{ username }}"
  with_items:
    - ansible.cfg.j2
    - vimrc.j2
  tags:
    - control_node
    - control
    - vim

- name: Create lab inventory directory
  file:
    state: directory
    path: /home/{{ username }}/lightbulb/lessons/lab_inventory
  tags:
    - control_node
    - control

- name: Put student inventory in proper spot
  copy:
    src: ./{{ username }}-instances.txt
    dest: "{{ control_node_inventory_path }}/{{ username }}-instances"
    owner: "{{ username }}"
    group: "{{ username }}"
  when: username in inventory_hostname
  tags:
    - control_node
    - control

- name: Install things needed for storage workshop
  block:
  - name: install python packages for netapp
    pip:
      name: netapp-lib
  - name: Put student inventory in proper spot
    copy:
      src: ./student_instances/{{ username }}-instances.txt
      dest: "{{ control_node_inventory_path }}/{{ username }}-instances"
      owner: "{{ username }}"
      group: "{{ username }}"
      force: yes
    when: username in inventory_hostname

  - name: Put student inventory in proper spot
    copy:
      src: ./student_instances/{{ username }}-ontapinstances.txt
      dest: "{{ control_node_inventory_path }}/{{ username }}-ontapinstances"
      owner: "{{ username }}"
      force: yes
      group: "{{ username }}"
    when: username in inventory_hostname

  - name: Assemble student inventory File
    assemble:
      src: "{{ control_node_inventory_path }}/"
      dest: "{{ control_node_inventory_path }}/inventory"
      regexp: "{{ username }}-"
    when: username in inventory_hostname

  - name: create storage workshop directory
    file:
      dest: /home/{{ username }}/storage-workshop
      owner: "{{ username }}"
      group: "{{ username }}"
      state: directory
      mode: '0755'

  - name: remove uneeded inventory files
    file:
      path: "{{ control_node_inventory_path }}/{{ username }}-instances"
      state: absent
    when: username in inventory_hostname


  - name: remove uneeded inventory files
    file:
      path: "{{ control_node_inventory_path }}/{{ username }}-ontapinstances"
      state: absent
    when: username in inventory_hostname

  - name: Copy playbook.yml file to storage-workshop directory
    copy:
      src: playbook.yml
      dest: /home/{{ username }}/storage-workshop
      owner: "{{ username }}"
      group: "{{ username }}"
      mode: '0755'

  when: storage_workshop|d(False) == True
